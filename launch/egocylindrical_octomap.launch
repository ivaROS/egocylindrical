<!-- 
  Example launch file for octomap_server mapping using nodelets: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
  <arg name="raw_cloud" default="points"/>
  <arg name="throttled_cloud" default="throttled_points"/>
  <arg name="rate" default="1"/>
  <arg name="fixed_frame_id" default="map"/>
  
  
  <include file="$(find egocylindrical)/launch/nodelets.launch">
    <arg name="fixed_frame_id" value="$(arg fixed_frame_id)"/>
  </include>
  
  
  <group ns="egocylinder">
  
    <!--
    <node pkg="nodelet" type="nodelet" name="point_cloud_throttler" args="load topic_tools
      <remap from="topic_in"  to="camera/rgb/image_color"/>
      <remap from="topic_out" to="camera/rgb/image_color_throttle"/>
    </node>
    -->
    
    <node pkg="topic_tools" type="throttle" name="point_cloud_throttler" args="messages $(arg raw_cloud) $(arg rate) $(arg throttled_cloud)">
      <param name="lazy" value="false"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="octomap_server_nodelet" args="load octomap_server/OctomapServerNodelet egocylindrical_nodelet_manager">
		  <param name="resolution" value="0.05" />
		
		  <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		  <param name="frame_id" type="string" value="$(arg fixed_frame_id)" />
		
		  <!-- maximum range to integrate (speedup!) -->
		  <param name="sensor_model/max_range" value="5.0" />
		
		  <!-- data source to integrate (PointCloud2) -->
		  <remap from="cloud_in" to="$(arg throttled_cloud)" />
	   
	    <!-- output collision map -->
	    <!--<remap from="octomap_server_nodelet/collision_map_out" to="collision_map_out"/> -->
	    <remap from="octomap_binary" to="temp_binary"/>
	  </node>
	
	</group>
</launch>
