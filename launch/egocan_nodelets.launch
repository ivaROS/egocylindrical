<launch>
  <arg name="use_provided_manager" default="false" />
  <arg name="provided_manager" default="camera/camera_nodelet_manager"/>
  <arg name="nodelet_manager" default="egocylindrical_nodelet_manager" unless="$(arg use_provided_manager)" />
  <arg name="nodelet_manager" default="$(arg provided_manager)" if="$(arg use_provided_manager)" />

  <arg name="depth_image" default="/camera/depth/image_raw"/>
  <arg name="depth_info" default="/camera/depth/camera_info"/>
  <arg name="fixed_frame_id" default="odom"/>

  
  <group ns="egocylinder">
    <node name="$(arg nodelet_manager)" pkg="nodelet" type="nodelet" args="manager" unless="$(arg use_provided_manager)" output="log">

    </node>

    <node name="depth_to_egocylindrical_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/egocylindrical_propagator_nodelet $(arg nodelet_manager)" >
      <param name="image_in" value="$(arg depth_image)"/>
      <param name="info_in" value="$(arg depth_info)"/>
      <param name="points_out" value="data"/>
      <param name="filtered_points" value="filtered_points"/>
      <param name="fixed_frame_id" value="$(arg fixed_frame_id)"/>
    </node>
    
    <node name="egocylindrical_to_pointcloud_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/point_cloud_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="data"/>
      <remap from="cylindrical" to="points"/>
    </node>

    <node name="egocylindrical_to_projected_pointcloud_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/projected_point_cloud_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="data"/>
    </node>
    
    <node name="egocylindrical_to_range_image_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="data"/>
      <param name="use_raw" value="False"/>
      <param name="image_topic" value="image"/>
      <param name="can_image_topic" value="can_image"/>
    </node>
  
    <node name="egocylindrical_to_raw_range_image_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="data"/>
      <param name="use_raw" value="True"/>
      <param name="image_topic" value="image_raw"/>
      <param name="can_image_topic" value="can_image_raw"/>
    </node>

    <node name="range_image_inflator_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_inflator_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="data"/>
      <remap from="range_image" to="image"/>
      <param name="image_topic" value="inflated_image"/>
    </node>
    
    <node name="raw_range_image_inflator_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_inflator_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="data"/>
      <remap from="range_image" to="image_raw"/>
      <param name="image_topic" value="inflated_image_raw"/>
    </node>
    
    <node name="range_image_converter_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_converter_nodelet $(arg nodelet_manager)" >
      <remap from="data_out" to="inflated_data"/>
      <remap from="image_in" to="inflated_image"/>
      <remap from="info_in" to="data"/>
    </node>
    
    <node name="inflated_point_publisher_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/point_cloud_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="inflated_data"/>
      <remap from="cylindrical" to="inflated_points"/>
    </node>
      
    <node name="raw_range_image_converter_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_converter_nodelet $(arg nodelet_manager)" >
      <remap from="data_out" to="inflated_data_raw"/>
      <remap from="image_in" to="inflated_image_raw"/>
      <remap from="info_in" to="data"/>
    </node>
    
    <node name="raw_inflated_point_publisher_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/point_cloud_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="inflated_data_raw"/>
      <remap from="cylindrical" to="inflated_points_raw"/>
    </node>
      
    <node name="sanity_check_range_converter_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_converter_nodelet $(arg nodelet_manager)" >
      <remap from="data_out" to="sanity_data"/>
      <remap from="image_in" to="image"/>
      <remap from="info_in" to="data"/>
    </node>
    
    <node name="sanity_check_ec_point_publisher_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/point_cloud_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="sanity_data"/>
      <remap from="cylindrical" to="sanity_points"/>
    </node>
    
    <node name="raw_sanity_check_range_converter_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/range_image_converter_nodelet $(arg nodelet_manager)" >
      <remap from="data_out" to="sanity_data_raw"/>
      <remap from="image_in" to="image_raw"/>
      <remap from="info_in" to="data"/>
    </node>
    
    <node name="raw_sanity_check_ec_point_publisher_nodelet" pkg="nodelet" type="nodelet" args="load egocylindrical/point_cloud_nodelet $(arg nodelet_manager)" >
      <remap from="egocylindrical_points" to="sanity_data_raw"/>
      <remap from="cylindrical" to="sanity_points_raw"/>
    </node>

  </group>
</launch>
